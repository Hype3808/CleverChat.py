{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to CleverChat.py CleverChat.py is a python API wrapper made for clever-chat \u200b CleverChat.py supports asynchronous and synchronous What is clever-chat? Clever-Chat is a wrapper for a chatbot API that you can use to make a chatbot in node.js created by Sunny Development Links for clever-chat API Discord Server","title":"Home"},{"location":"#welcome","text":"","title":"Welcome!"},{"location":"#welcome-to-cleverchatpy","text":"CleverChat.py is a python API wrapper made for clever-chat \u200b CleverChat.py supports asynchronous and synchronous","title":"Welcome to CleverChat.py"},{"location":"#what-is-clever-chat","text":"Clever-Chat is a wrapper for a chatbot API that you can use to make a chatbot in node.js created by Sunny Development","title":"What is clever-chat?"},{"location":"#links-for-clever-chat","text":"API Discord Server","title":"Links for clever-chat"},{"location":"quick-start/","text":"Quick Start Installation Using PIP pip install -U cleverchat.py Using GIT Note You need to download Git to install using this method pip install -U git+https://github.com/Hype3808/CleverChat.py Basic Examples Asynchronous Example 1 2 3 4 5 6 7 8 9 10 11 from clever_chat import AsyncClient import asyncio client = AsyncClient () async def main (): response = await client . get_response ( \"Hi\" ) print ( response . message ) await client . close () asyncio . get_event_loop () . run_until_complete ( main ()) Synchronous Example 1 2 3 4 5 6 7 from clever_chat import Client client = Client () res = client . get_response ( \"Hi\" ) print ( res . message ) client . close ()","title":"Quick Start"},{"location":"quick-start/#quick-start","text":"","title":"Quick Start"},{"location":"quick-start/#installation","text":"","title":"Installation"},{"location":"quick-start/#using-pip","text":"pip install -U cleverchat.py","title":"Using PIP"},{"location":"quick-start/#using-git","text":"Note You need to download Git to install using this method pip install -U git+https://github.com/Hype3808/CleverChat.py","title":"Using GIT"},{"location":"quick-start/#basic-examples","text":"","title":"Basic Examples"},{"location":"quick-start/#asynchronous-example","text":"1 2 3 4 5 6 7 8 9 10 11 from clever_chat import AsyncClient import asyncio client = AsyncClient () async def main (): response = await client . get_response ( \"Hi\" ) print ( response . message ) await client . close () asyncio . get_event_loop () . run_until_complete ( main ())","title":"Asynchronous Example"},{"location":"quick-start/#synchronous-example","text":"1 2 3 4 5 6 7 from clever_chat import Client client = Client () res = client . get_response ( \"Hi\" ) print ( res . message ) client . close ()","title":"Synchronous Example"},{"location":"api-references/async-client/","text":"AsyncClient Asynchronous client Attributes class AsyncClient ( name : Optional [ str ] = 'Clever Chat' , * , gender : Optional [ str ] = 'Male' , master : Optional [ str ] = 'Royalty#2021' , age : Optional [ int ] = 18 , birthday : Optional [ str ] = \"10/10/2000\" , birthplace : Optional [ str ] = 'France' , birthyear : Optional [ int ] = 2000 , religion : Optional [ str ] = 'Christian' , favourite_actor : Optional [ str ] = \"Brad Pitt\" , favourite_actress : Optional [ str ] = \"Julia Roberts\" , favourite_artist : Optional [ str ] = 'Leonardo' , favourite_author : Optional [ str ] = 'Jeff Kinney' , favourite_band : Optional [ str ] = 'Imagine' , favourite_book : Optional [ str ] = 'Diary' , celibrity : Optional [ str ] = 'Taylor Swift' , chinese_sign : Optional [ str ] = 'Dragon' , family : Optional [ str ] = 'AI ChatBot' , favourite_color : Optional [ str ] = 'Pink' , favourite_food : Optional [ str ] = 'Pizza' , favourite_movie : Optional [ str ] = 'Ant Man' , favourite_opera : Optional [ str ] = 'Carmen' , favourite_season : Optional [ str ] = 'Spring' , e_type : Optional [ str ] = \"AI ChatBot\" , favourite_ethics : Optional [ str ] = \"The Golden Rule\" , favourite_show : Optional [ str ] = 'Discovery' , favourite_song : Optional [ str ] = 'Believer' , favourite_sport : Optional [ str ] = 'Badminton' , favourite_subject : Optional [ str ] = 'Math' , favourite_football_team : Optional [ str ] = 'Dallas Cowboys' , favourite_baseball_team : Optional [ str ] = 'New York Yankees' , city : Optional [ str ] = 'San Francisco' , state : Optional [ str ] = 'California' , classes : Optional [ str ] = 'Artificial Intelligence' , country : Optional [ str ] = 'United States' , company : Optional [ str ] = 'Acobot' , email : Optional [ str ] = 'lucaswong080917@gmail.com' , wechat : Optional [ str ] = 'Brainshop' , wear : Optional [ str ] = 'My shinning virtual wardrobe' , vocab : Optional [ int ] = 20000 , version : Optional [ str ] = 'v0.0.1' , totalcli : Optional [ str ] = 'hundreds of thousands' , species : Optional [ str ] = 'Artificial Intelligence ChatBot' , sign : Optional [ str ] = 'Pisces' , scspecies : Optional [ str ] = \"\u667a\u80fd\u673a\u5668\u4eba\" , scsign : Optional [ str ] = \"\u53cc\u9c7c\u5ea7\" , scnationality : Optional [ str ] = \"\u4e2d\u56fd\" , scmaster : Optional [ str ] = \"Acobot \u56e2\u961f\" , scgender : Optional [ str ] = \"\u5973\" , scfavouritefood : Optional [ str ] = \"\u7535\" , scfavouritecolor : Optional [ str ] = \"\u7eff\u8272\" , sccountry : Optional [ str ] = \"\u4e2d\u56fd\" , sccompany : Optional [ str ] = \"\u827e\u73c2\uff08\u5317\u4eac\uff09\u667a\u80fd\u7cfb\u7edf\u6709\u9650\u516c\u53f8\" , sccity : Optional [ str ] = \"\u5317\u4eac\" , scchinesesign : Optional [ str ] = \"\u9f99\" , hockey : Optional [ str ] = \"New York Rangers\" , job : Optional [ str ] = \"chat bot\" , kind_music : Optional [ str ] = \"techno\" , celebrities : Optional [ str ] = \"C3PO\" , orientation : Optional [ str ] = \"Straight\" , phylum : Optional [ str ] = \"Software\" , president : Optional [ str ] = \"Joe Biden\" ) Methods async def get_response ( message : str = None ) Get the response Raises MissingMessageArgument: Raise when message is None NoneAPIError: Raise when the API is down or having errors Returns Result async def close () Close the client session","title":"AsyncClient"},{"location":"api-references/async-client/#asyncclient","text":"Asynchronous client","title":"AsyncClient"},{"location":"api-references/async-client/#attributes","text":"class AsyncClient ( name : Optional [ str ] = 'Clever Chat' , * , gender : Optional [ str ] = 'Male' , master : Optional [ str ] = 'Royalty#2021' , age : Optional [ int ] = 18 , birthday : Optional [ str ] = \"10/10/2000\" , birthplace : Optional [ str ] = 'France' , birthyear : Optional [ int ] = 2000 , religion : Optional [ str ] = 'Christian' , favourite_actor : Optional [ str ] = \"Brad Pitt\" , favourite_actress : Optional [ str ] = \"Julia Roberts\" , favourite_artist : Optional [ str ] = 'Leonardo' , favourite_author : Optional [ str ] = 'Jeff Kinney' , favourite_band : Optional [ str ] = 'Imagine' , favourite_book : Optional [ str ] = 'Diary' , celibrity : Optional [ str ] = 'Taylor Swift' , chinese_sign : Optional [ str ] = 'Dragon' , family : Optional [ str ] = 'AI ChatBot' , favourite_color : Optional [ str ] = 'Pink' , favourite_food : Optional [ str ] = 'Pizza' , favourite_movie : Optional [ str ] = 'Ant Man' , favourite_opera : Optional [ str ] = 'Carmen' , favourite_season : Optional [ str ] = 'Spring' , e_type : Optional [ str ] = \"AI ChatBot\" , favourite_ethics : Optional [ str ] = \"The Golden Rule\" , favourite_show : Optional [ str ] = 'Discovery' , favourite_song : Optional [ str ] = 'Believer' , favourite_sport : Optional [ str ] = 'Badminton' , favourite_subject : Optional [ str ] = 'Math' , favourite_football_team : Optional [ str ] = 'Dallas Cowboys' , favourite_baseball_team : Optional [ str ] = 'New York Yankees' , city : Optional [ str ] = 'San Francisco' , state : Optional [ str ] = 'California' , classes : Optional [ str ] = 'Artificial Intelligence' , country : Optional [ str ] = 'United States' , company : Optional [ str ] = 'Acobot' , email : Optional [ str ] = 'lucaswong080917@gmail.com' , wechat : Optional [ str ] = 'Brainshop' , wear : Optional [ str ] = 'My shinning virtual wardrobe' , vocab : Optional [ int ] = 20000 , version : Optional [ str ] = 'v0.0.1' , totalcli : Optional [ str ] = 'hundreds of thousands' , species : Optional [ str ] = 'Artificial Intelligence ChatBot' , sign : Optional [ str ] = 'Pisces' , scspecies : Optional [ str ] = \"\u667a\u80fd\u673a\u5668\u4eba\" , scsign : Optional [ str ] = \"\u53cc\u9c7c\u5ea7\" , scnationality : Optional [ str ] = \"\u4e2d\u56fd\" , scmaster : Optional [ str ] = \"Acobot \u56e2\u961f\" , scgender : Optional [ str ] = \"\u5973\" , scfavouritefood : Optional [ str ] = \"\u7535\" , scfavouritecolor : Optional [ str ] = \"\u7eff\u8272\" , sccountry : Optional [ str ] = \"\u4e2d\u56fd\" , sccompany : Optional [ str ] = \"\u827e\u73c2\uff08\u5317\u4eac\uff09\u667a\u80fd\u7cfb\u7edf\u6709\u9650\u516c\u53f8\" , sccity : Optional [ str ] = \"\u5317\u4eac\" , scchinesesign : Optional [ str ] = \"\u9f99\" , hockey : Optional [ str ] = \"New York Rangers\" , job : Optional [ str ] = \"chat bot\" , kind_music : Optional [ str ] = \"techno\" , celebrities : Optional [ str ] = \"C3PO\" , orientation : Optional [ str ] = \"Straight\" , phylum : Optional [ str ] = \"Software\" , president : Optional [ str ] = \"Joe Biden\" )","title":"Attributes"},{"location":"api-references/async-client/#methods","text":"async def get_response ( message : str = None ) Get the response","title":"Methods"},{"location":"api-references/async-client/#raises","text":"MissingMessageArgument: Raise when message is None NoneAPIError: Raise when the API is down or having errors","title":"Raises"},{"location":"api-references/async-client/#returns","text":"Result async def close () Close the client session","title":"Returns"},{"location":"api-references/client/","text":"Client Synchronous client Attributes class Client ( name : Optional [ str ] = 'Clever Chat' , * , gender : Optional [ str ] = 'Male' , master : Optional [ str ] = 'Royalty#2021' , age : Optional [ int ] = 18 , birthday : Optional [ str ] = \"10/10/2000\" , birthplace : Optional [ str ] = 'France' , birthyear : Optional [ int ] = 2000 , religion : Optional [ str ] = 'Christian' , favourite_actor : Optional [ str ] = \"Brad Pitt\" , favourite_actress : Optional [ str ] = \"Julia Roberts\" , favourite_artist : Optional [ str ] = 'Leonardo' , favourite_author : Optional [ str ] = 'Jeff Kinney' , favourite_band : Optional [ str ] = 'Imagine' , favourite_book : Optional [ str ] = 'Diary' , celibrity : Optional [ str ] = 'Taylor Swift' , chinese_sign : Optional [ str ] = 'Dragon' , family : Optional [ str ] = 'AI ChatBot' , favourite_color : Optional [ str ] = 'Pink' , favourite_food : Optional [ str ] = 'Pizza' , favourite_movie : Optional [ str ] = 'Ant Man' , favourite_opera : Optional [ str ] = 'Carmen' , favourite_season : Optional [ str ] = 'Spring' , e_type : Optional [ str ] = \"AI ChatBot\" , favourite_ethics : Optional [ str ] = \"The Golden Rule\" , favourite_show : Optional [ str ] = 'Discovery' , favourite_song : Optional [ str ] = 'Believer' , favourite_sport : Optional [ str ] = 'Badminton' , favourite_subject : Optional [ str ] = 'Math' , favourite_football_team : Optional [ str ] = 'Dallas Cowboys' , favourite_baseball_team : Optional [ str ] = 'New York Yankees' , city : Optional [ str ] = 'San Francisco' , state : Optional [ str ] = 'California' , classes : Optional [ str ] = 'Artificial Intelligence' , country : Optional [ str ] = 'United States' , company : Optional [ str ] = 'Acobot' , email : Optional [ str ] = 'lucaswong080917@gmail.com' , wechat : Optional [ str ] = 'Brainshop' , wear : Optional [ str ] = 'My shinning virtual wardrobe' , vocab : Optional [ int ] = 20000 , version : Optional [ str ] = 'v0.0.1' , totalcli : Optional [ str ] = 'hundreds of thousands' , species : Optional [ str ] = 'Artificial Intelligence ChatBot' , sign : Optional [ str ] = 'Pisces' , scspecies : Optional [ str ] = \"\u667a\u80fd\u673a\u5668\u4eba\" , scsign : Optional [ str ] = \"\u53cc\u9c7c\u5ea7\" , scnationality : Optional [ str ] = \"\u4e2d\u56fd\" , scmaster : Optional [ str ] = \"Acobot \u56e2\u961f\" , scgender : Optional [ str ] = \"\u5973\" , scfavouritefood : Optional [ str ] = \"\u7535\" , scfavouritecolor : Optional [ str ] = \"\u7eff\u8272\" , sccountry : Optional [ str ] = \"\u4e2d\u56fd\" , sccompany : Optional [ str ] = \"\u827e\u73c2\uff08\u5317\u4eac\uff09\u667a\u80fd\u7cfb\u7edf\u6709\u9650\u516c\u53f8\" , sccity : Optional [ str ] = \"\u5317\u4eac\" , scchinesesign : Optional [ str ] = \"\u9f99\" , hockey : Optional [ str ] = \"New York Rangers\" , job : Optional [ str ] = \"chat bot\" , kind_music : Optional [ str ] = \"techno\" , celebrities : Optional [ str ] = \"C3PO\" , orientation : Optional [ str ] = \"Straight\" , phylum : Optional [ str ] = \"Software\" , president : Optional [ str ] = \"Joe Biden\" ) Methods def get_response ( message : str = None ) Get the response Raises MissingMessageArgument: Raise when message is None NoneAPIError: Raise when the API is down or having errors Returns Result def close () Close the client session","title":"Client"},{"location":"api-references/client/#client","text":"Synchronous client","title":"Client"},{"location":"api-references/client/#attributes","text":"class Client ( name : Optional [ str ] = 'Clever Chat' , * , gender : Optional [ str ] = 'Male' , master : Optional [ str ] = 'Royalty#2021' , age : Optional [ int ] = 18 , birthday : Optional [ str ] = \"10/10/2000\" , birthplace : Optional [ str ] = 'France' , birthyear : Optional [ int ] = 2000 , religion : Optional [ str ] = 'Christian' , favourite_actor : Optional [ str ] = \"Brad Pitt\" , favourite_actress : Optional [ str ] = \"Julia Roberts\" , favourite_artist : Optional [ str ] = 'Leonardo' , favourite_author : Optional [ str ] = 'Jeff Kinney' , favourite_band : Optional [ str ] = 'Imagine' , favourite_book : Optional [ str ] = 'Diary' , celibrity : Optional [ str ] = 'Taylor Swift' , chinese_sign : Optional [ str ] = 'Dragon' , family : Optional [ str ] = 'AI ChatBot' , favourite_color : Optional [ str ] = 'Pink' , favourite_food : Optional [ str ] = 'Pizza' , favourite_movie : Optional [ str ] = 'Ant Man' , favourite_opera : Optional [ str ] = 'Carmen' , favourite_season : Optional [ str ] = 'Spring' , e_type : Optional [ str ] = \"AI ChatBot\" , favourite_ethics : Optional [ str ] = \"The Golden Rule\" , favourite_show : Optional [ str ] = 'Discovery' , favourite_song : Optional [ str ] = 'Believer' , favourite_sport : Optional [ str ] = 'Badminton' , favourite_subject : Optional [ str ] = 'Math' , favourite_football_team : Optional [ str ] = 'Dallas Cowboys' , favourite_baseball_team : Optional [ str ] = 'New York Yankees' , city : Optional [ str ] = 'San Francisco' , state : Optional [ str ] = 'California' , classes : Optional [ str ] = 'Artificial Intelligence' , country : Optional [ str ] = 'United States' , company : Optional [ str ] = 'Acobot' , email : Optional [ str ] = 'lucaswong080917@gmail.com' , wechat : Optional [ str ] = 'Brainshop' , wear : Optional [ str ] = 'My shinning virtual wardrobe' , vocab : Optional [ int ] = 20000 , version : Optional [ str ] = 'v0.0.1' , totalcli : Optional [ str ] = 'hundreds of thousands' , species : Optional [ str ] = 'Artificial Intelligence ChatBot' , sign : Optional [ str ] = 'Pisces' , scspecies : Optional [ str ] = \"\u667a\u80fd\u673a\u5668\u4eba\" , scsign : Optional [ str ] = \"\u53cc\u9c7c\u5ea7\" , scnationality : Optional [ str ] = \"\u4e2d\u56fd\" , scmaster : Optional [ str ] = \"Acobot \u56e2\u961f\" , scgender : Optional [ str ] = \"\u5973\" , scfavouritefood : Optional [ str ] = \"\u7535\" , scfavouritecolor : Optional [ str ] = \"\u7eff\u8272\" , sccountry : Optional [ str ] = \"\u4e2d\u56fd\" , sccompany : Optional [ str ] = \"\u827e\u73c2\uff08\u5317\u4eac\uff09\u667a\u80fd\u7cfb\u7edf\u6709\u9650\u516c\u53f8\" , sccity : Optional [ str ] = \"\u5317\u4eac\" , scchinesesign : Optional [ str ] = \"\u9f99\" , hockey : Optional [ str ] = \"New York Rangers\" , job : Optional [ str ] = \"chat bot\" , kind_music : Optional [ str ] = \"techno\" , celebrities : Optional [ str ] = \"C3PO\" , orientation : Optional [ str ] = \"Straight\" , phylum : Optional [ str ] = \"Software\" , president : Optional [ str ] = \"Joe Biden\" )","title":"Attributes"},{"location":"api-references/client/#methods","text":"def get_response ( message : str = None ) Get the response","title":"Methods"},{"location":"api-references/client/#raises","text":"MissingMessageArgument: Raise when message is None NoneAPIError: Raise when the API is down or having errors","title":"Raises"},{"location":"api-references/client/#returns","text":"Result def close () Close the client session","title":"Returns"},{"location":"api-references/exceptions/","text":"Exceptions MissingMessageArgument Raise when the message argument is None APIError Raise when a KeyError Occurs","title":"Exceptions"},{"location":"api-references/exceptions/#exceptions","text":"","title":"Exceptions"},{"location":"api-references/exceptions/#missingmessageargument","text":"Raise when the message argument is None","title":"MissingMessageArgument"},{"location":"api-references/exceptions/#apierror","text":"Raise when a KeyError Occurs","title":"APIError"},{"location":"api-references/result/","text":"Result class Result ( data ) Properties message Returns data[\"message\"] Raises APIError: Raise when a KeyError Occurs","title":"Result"},{"location":"api-references/result/#result","text":"class Result ( data )","title":"Result"},{"location":"api-references/result/#properties","text":"","title":"Properties"},{"location":"api-references/result/#message","text":"","title":"message"},{"location":"api-references/result/#returns","text":"data[\"message\"]","title":"Returns"},{"location":"api-references/result/#raises","text":"APIError: Raise when a KeyError Occurs","title":"Raises"},{"location":"more/git/","text":"Git is software for tracking changes in any set of files, usually used for coordinating work among programmers collaboratively developing source code during software development. Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different systems). Windows Visit https://gitforwindows.org/ or https://git-scm.com/download/windows Linux Visit https://git-scm.com/download/linux (it's extremely likely in your distros repository) Mac Visit https://git-scm.com/download/mac (it's in brew) Choco Package Manager If you use choco package manager, use: choco install git Scoop If you use scoop, use: scoop install git","title":"Git"},{"location":"more/git/#windows","text":"Visit https://gitforwindows.org/ or https://git-scm.com/download/windows","title":"Windows"},{"location":"more/git/#linux","text":"Visit https://git-scm.com/download/linux (it's extremely likely in your distros repository)","title":"Linux"},{"location":"more/git/#mac","text":"Visit https://git-scm.com/download/mac (it's in brew)","title":"Mac"},{"location":"more/git/#choco-package-manager","text":"If you use choco package manager, use: choco install git","title":"Choco Package Manager"},{"location":"more/git/#scoop","text":"If you use scoop, use: scoop install git","title":"Scoop"}]}